class Game{
    field Renderer renderer;
    field Board board;
    field Player currentPlayer;
    field Player playerX;
    field Player playerO;
    field int winStreak;

    constructor Game new(Player _playerX, Player _playerO, int size,int _winStreak){
        let board = Board.new(size);
        let renderer = Renderer.new(board);
        let playerX = _playerX;
        let playerO = _playerO;
        let winStreak = _winStreak;
        return this;
    }

    method Player run_game(){
        let currentPlayer=playerX;
        while(board.hasEmpty()){
            do Graphics.clear();
            do Output.printString("This is ");
            do Output.printString(currentPlayer.getSign());
            do Output.printString("'s turn");
            do Output.println();
            do renderer.draw(50,50,150);
            do currentPlayer.play_turn(board);
            if(hasPlayerWon(currentPlayer.getValue())){
                do renderer.draw(50,50,150);
                return currentPlayer;
            }
            //switch players
            if(currentPlayer = playerX){
                let currentPlayer=playerO;
            }   
            else{
                let currentPlayer=playerX;
            }
            
        }
        do renderer.draw(50,50,150);
        do board.dispose();           
        return null;
    }

    method boolean hasPlayerWon(int playerValue){
        var boolean a,b,c;
        let a = checkHorizontal(playerValue);
        let b = checkVertical(playerValue);
        let c = checkDiagonal(playerValue);
        return a|b|c;
    }

    method int checkHorizontal(int playerValue){
        var int i,j,size;
        var boolean streak;
        let i=0;
        let size = board.getSize();
        while (i< size) {
            let streak = true;
            let j=0;
            while(j<size) {
                if(~(board.get(i,j) = playerValue)){
                    let streak = false;
                    let j=size;
                }
                let j = j + 1;
            }
            if (streak){
                return true;
            }
            let i= i + 1;
        }
        return false;
    }

    method boolean checkVertical(int playerValue){
        var int i,j,size;
        var boolean streak;
        let i=0;
        let size = board.getSize();
        while (i< size) {
            let streak = true;
            let j=0;
            while(j<size) {
                if(~(board.get(j,i) = playerValue)){
                    let streak = false;
                    let j=size;
                }
                let j = j + 1;
            }
            if (streak){
                return true;
            }
            let i= i + 1;
        }
        return false;
    }

    method boolean checkDiagonal(int playerValue){
        var int i,size;
        var boolean streak;
        let size = board.getSize();
        let i = 0;
        let streak = true;
        while (i < size) {
            if(~(board.get(i,i) = playerValue)){
                let streak = false;
                let i=size;
            }
            let i= i + 1;
        }
        if(streak){
            return true;
        }
        
        let i = 0;
        let streak = true;
        while (i < size) {
            if(~(board.get((size-1-i),i) = playerValue)){
                let streak = false;
                let i=size;
            }
            let i= i +1;
        }
        if(streak){
            return true;
        }

        return false;
   
    }

    method void dispose(){
        do playerO.dispose();
        do playerX.dispose();
        do renderer.dispose();
        do board.dispose();
        do Memory.deAlloc(this);
        return;
    }

}