class Board{
    field int size;
    field intArray2d data;

    constructor Board new(int _size){
        var int i;
        let size = _size;
        let data = intArray2d.new(size,size);
        return this;
    }

    method boolean isInside(int row,int col){
        return data.isInside(row,col);
    }

    method int get ( int row, int col ) {
        if (isInside(row,col)){
            return data.get(row,col);
        }
        // 0 === empty
        return 0;
    }

    method boolean set ( int row, int col, int value ) {
        if (isInside(row,col) & (get(row,col)=0)){
            do data.set(row,col,value);
            return true;
        }
        return false;
    }

    method boolean hasEmpty(){
        var int i, j;
        let i = 0;
        while (i < size) {
            let j = 0;
            while(j < size){
                if(get(i, j) = 0){
                    return true;
                }
                let j = j + 1;
            }
            let i = i + 1;
        }
        return false;
    }

    method int getSize(){
        return size;
    }
    method void dispose(){
        do data.dispose();
        do Memory.deAlloc(this);
        return;
    }
}